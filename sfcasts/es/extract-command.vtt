WEBVTT

00:00:01.066 --> 00:00:04.856 align:middle
Hasta ahora, hemos estado creando claves de
traducción y añadiéndolas manualmente,

00:00:04.856 --> 00:00:07.726 align:middle
junto con sus valores, a messages.en.yaml.

00:00:08.236 --> 00:00:11.676 align:middle
¿Pero sabías que existe un método alternativo
que automatiza parte de este proceso?

00:00:12.176 --> 00:00:15.436 align:middle
Vamos a traducir los dos elementos de
menú que nos quedan: "Tiempo" y "Diario".

00:00:15.946 --> 00:00:20.516 align:middle
Abre templates/base.html.twig y busca
el texto de estos elementos de menú.

00:00:21.096 --> 00:00:24.836 align:middle
Sigue nuestra rutina habitual de buscar
una clave y utilizar el filtro trans.

00:00:25.316 --> 00:00:32.056 align:middle
{{ 'base.weather'|trans }} y {{
'base.journal'|trans }}: Vale,

00:00:32.336 --> 00:00:36.296 align:middle
en lugar de añadir manualmente estas
entradas a nuestro archivo messages.en.yaml,

00:00:36.586 --> 00:00:42.396 align:middle
dirígete a tu terminal y ejecuta:
symfony console translation:extract en

00:00:42.666 --> 00:00:47.596 align:middle
--dump-messages Este comando
es similar a debug:translation

00:00:47.596 --> 00:00:50.486 align:middle
en el sentido de que escanea tu código
y encuentra claves de traducción.

00:00:51.076 --> 00:00:54.516 align:middle
Estas claves en verde son las nuevas que
hemos añadido y aún no tienen entradas

00:00:54.516 --> 00:00:57.076 align:middle
en nuestro archivo messages.en.yaml.

00:00:57.536 --> 00:01:00.806 align:middle
Podemos utilizar el comando para autoañadir
estas nuevas claves a nuestro archivo YAML.

00:01:01.356 --> 00:01:06.306 align:middle
Ejecuta de nuevo el comando, pero
sustituye --dump-messages por --force.

00:01:06.886 --> 00:01:11.696 align:middle
A continuación, añade --format=yaml
para que escriba como YAML, y

00:01:11.696 --> 00:01:17.166 align:middle
--as-tree=3 para mantener las claves sangradas a
tres niveles de profundidad en el archivo YAML.

00:01:17.816 --> 00:01:20.966 align:middle
¡Vuelve a messages.en.yaml y compruébalo!

00:01:21.256 --> 00:01:22.376 align:middle
¡Aquí están nuestras nuevas claves!

00:01:22.916 --> 00:01:26.096 align:middle
Los valores son los nombres de las claves
prefijados con __ (dos guiones bajos).

00:01:26.516 --> 00:01:28.836 align:middle
Esto puede ayudarte a encontrarlas
rápidamente si hay muchas.

00:01:29.346 --> 00:01:31.446 align:middle
Este prefijo puede personalizarse si lo deseas.

00:01:32.246 --> 00:01:40.336 align:middle
Sustitúyelos por el texto adecuado: "Tiempo"
y "Diario": Actualiza tu aplicación y listo...

00:01:40.726 --> 00:01:42.996 align:middle
bueno, no ha cambiado nada,
¡pero sabemos que funciona!

00:01:43.596 --> 00:01:46.366 align:middle
Si estás traduciendo en masa un
sitio existente como nosotros,

00:01:46.526 --> 00:01:49.826 align:middle
creo que este método puede ser más
engorroso que nuestro proceso anterior.

00:01:50.326 --> 00:01:53.366 align:middle
Lo que acaba ocurriendo es que, al
añadir claves en masa en tu código,

00:01:53.616 --> 00:01:56.366 align:middle
una vez que las extraes, ¡te
olvidas del texto original!

00:01:56.786 --> 00:01:59.936 align:middle
Pero! este método funciona muy bien
cuando desarrollas una nueva función.

00:02:00.316 --> 00:02:04.536 align:middle
Puedes añadir las claves para el texto en tu
código, y averiguar el texto real más tarde.

00:02:05.416 --> 00:02:08.606 align:middle
Este comando tiene otra función
genial, ¡quizás no intencionada!

00:02:09.186 --> 00:02:13.306 align:middle
Digamos que tienes un servicio de traducción
que te pide que envíes tu archivo de traducción

00:02:13.306 --> 00:02:15.746 align:middle
en inglés, y ellos te lo
devolverán en francés.

00:02:16.066 --> 00:02:16.766 align:middle
Fácil, ¿verdad?

00:02:17.036 --> 00:02:19.336 align:middle
Sólo tienes que enviarles messages.en.yaml.

00:02:19.746 --> 00:02:22.126 align:middle
Pero... ¡no saben qué demonios es YAML!

00:02:22.386 --> 00:02:25.936 align:middle
Quieren el archivo en un formato
compatible con su software: XLIFF.

00:02:26.416 --> 00:02:27.146 align:middle
¡No te preocupes!

00:02:27.356 --> 00:02:30.716 align:middle
¡El comando translation:extract
puede convertir a diferentes formatos!

00:02:31.076 --> 00:02:36.736 align:middle
Ejecuta esto: symfony console
translation:extract en --force

00:02:37.016 --> 00:02:45.126 align:middle
--format=xliff En nuestro directorio translations/,
tenemos un nuevo archivo: messages.en.xliff.

00:02:45.456 --> 00:02:46.166 align:middle
Ábrelo.

00:02:46.836 --> 00:02:47.906 align:middle
¡Uf! ¡Qué asco!

00:02:47.906 --> 00:02:51.516 align:middle
¡XML! No te preocupes: ¡a los
programas de traducción les encanta!

00:02:51.996 --> 00:02:54.936 align:middle
Sólo tienes que enviarles este archivo y
decirles que cambien el texto de <target>

00:02:54.936 --> 00:02:57.276 align:middle
, que es inglés, por las
traducciones al francés.

00:02:59.036 --> 00:03:02.406 align:middle
Cuando te lo devuelvan, cámbiale
el nombre a messages.fr.xliff

00:03:02.406 --> 00:03:05.566 align:middle
y vuelve a colocarlo en el
directorio translations/.

00:03:06.136 --> 00:03:10.926 align:middle
Sólo tienes que cambiar el primer <target> para que diga
"(Francés) Asteroides Locales": De vuelta en nuestra aplicación,

00:03:11.056 --> 00:03:13.726 align:middle
cambia a la versión francesa
de esta página y ¡boom!

00:03:13.976 --> 00:03:15.456 align:middle
"(Francés) Asteroides Locales".

00:03:16.146 --> 00:03:20.826 align:middle
Vale, ya está bien de XML por
hoy: borra messages.fr.xliff.

00:03:21.626 --> 00:03:25.276 align:middle
¿Y si no tienes un servicio de traducción
al que puedas enviar estos archivos?

00:03:25.726 --> 00:03:26.466 align:middle
No hay problema

00:03:26.646 --> 00:03:30.696 align:middle
Hay soluciones basadas en la nube que pueden
ayudarte, ¡y Symfony tiene integraciones para ellas!

00:03:31.006 --> 00:03:32.356 align:middle
¡Vamos a comprobarlo!
